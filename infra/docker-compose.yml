version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    image: mbigfly/foodgram_project_frontend:latest
    volumes:
      - frontend_value:/app/result_build/
  backend:
    image: mbigfly/foodgram_project:latest
    # command: >
    # bash -c "python manage.py migrate &&  python manage.py collectstatic --noinput && python manage.py migrate --run-syncdb && gunicorn --bind 0:8000 foodgram.wsgi"
    # sudo docker exec -it foodgram_backend_1 python manage.py loaddata data/dump.json
    restart: always
    volumes:
      - static_backend_value:/app/static_backend/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_value:/usr/share/nginx/html/
      - frontend_value:/usr/share/nginx/html/api/docs/
      - static_backend_value:/app/static_backend/
      - media_value:/app/media/
    depends_on:
      - frontend
      - backend
volumes:
  static_backend_value:
  frontend_value:
  media_value:


